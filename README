--------------------------------------------------------------------------------
             _____ _____ _____ _     _____ _____ _____ _____ _____              
            |  ___|  _  \  _  \ |   |  _  |  _  \  ___|  _  \  ___|             
            | |  _| |_| / |_| | |   | |_| | | | | |___| |_| / |___              
            | | | |  _  \  _  | |   |  _  | | | |  ___|  _  \  ___|             
            | |_| | | | | |_| | |___| | | | |_| | |___| | | | |                 
            |_____|_| |_|_____/_____|_| |_|_____/_____|_| |_|_|                 
--------------------------------------------------------------------------------
Contains utilities and tools usable with BladeRF that interface with GNURadio.
These have been tested on both Linux and Windows platforms

                      top_level_bladeRF
                     /                 \
                scanner                 gnuradio_interface 
               /                       /        |         \
             BladeRF         rx_2400_r2      tx_2400_r2    rx_processor

- top_level_bladeRF initializes all the other threads:
  - gnuradio_interface
    - rx_processor
  - scanner
  It allows for smooth exiting so nothing gets locked up.

- gnuradio_interface calls either rx_2400_r2 or tx_2400_r2 depending on 
  configuration to either receive or transmit data using FSK modulation. It 
  also starts a rx_processor thread to process either old or live data.

- rx_processor processes the data received, including the bitstream containing
  communication data, GPS, and anything else being collected. This can be set 
  to work on old or new data.

- scanner has peak detection and RSSI measuring capability.

A good portion of this was inspired by and builds on Stephen Wayne's FSK 
GNURadio modules.
--------------------------------------------------------------------------------
Setting up Dependencies:

Windows:
  - GNURadio binary installer
  - Nuand BladeRF installer
  python -m pip install pymavlink
  python -m pip install numpy

  Setting up System Environment Variables:
  Add to PATH:
    C:\Program Files\GNURadio-3.7\bin
    C:\Program Files\GNURadio-3.7\lib\site-packages

  Add to PYTHONPATH:
    C:\Program Files\GNURadio-3.7\lib\site-packages

Linux:
  sudo apt-get install bladerf
  sudo apt-get install gnuradio
  sudo apt-get install gr-osmocom
  sudo apt-get install numpy
  sudo apt-get install pymavlink
--------------------------------------------------------------------------------
Running program:

First, config the file accordingly with:
vim bladeRF_full_duplex.py

Look for Config variables under import statements, and set them based on whether
you want to transmit, receive, looking for new samples, process samples live,
etc. 

When ready:
- Connect appropriate antennas to connectors on bladeRF
- Connect bladeRF to USB port

Run: (assuming python is in PATH. You can also run in IDLE or whatever you use)
python bladeRF_full_duplex.py
--------------------------------------------------------------------------------